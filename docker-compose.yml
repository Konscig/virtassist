version: '3.8'
services:
    chatbot:
        build: ./chatbot
        image: virtassist/chatbot:latest
        container_name: virtassist-chatbot
        command: sh -c "python database.py && python main.py"
        env_file:
            - .env.docker
        depends_on:
            - db
            - qa
        networks:
            - chatbot-conn
    db:
        build: ./db
        image: virtassist/db:latest
        container_name: virtassist-db
        environment:
            - TZ=${TZ}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - chatbot-conn
    qa:
        build: ./qa
        image: virtassist/qa:latest
        container_name: virtassist-qa
        command: sh -c "cron && python database.py && python main.py"
        env_file:
            - .env.docker
        depends_on:
            - db
        networks:
            - chatbot-conn
    admin-panel:
        build: ./admin-panel
        image: virtassist/admin-panel:latest
        container_name: virtassist-admin-panel
        environment:
            - FLASK_ENV=development
            - PYTHONUNBUFFERED=True
        command: gunicorn --bind 0.0.0.0:80 --timeout 60 wsgi:app
        restart: on-failure
        ports:
            - 80:80
        env_file:
            - .env.docker
        depends_on:
            - db
            - qa
            - chatbot
        networks:
            - chatbot-conn
volumes:
    db-data:

networks:
    chatbot-conn:
        driver: bridge
